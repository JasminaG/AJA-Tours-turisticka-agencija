@* Remove this section if you are using bundling *@
@section Scripts {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="https://apis.google.com/js/platform.js?onload=renderButton" async defer></script>
    <meta name="google-signin-client_id" content="694187545562-ad7r7nc69ja0lp73547qkgjq3895odsm.apps.googleusercontent.com">https://apis.google.com/js/platform.js

    @*LOGIN BY AIDA HONDO*@

    <script>
        //LOGIN ZA FACEBOOK gdje se unosi appID koji se dobije registracijom na Facebook kao developer
        window.fbAsyncInit = function () {
            FB.init({
                appId: '1614778061966813',
                autoLogAppEvents: true,
                xfbml: true,
                version: 'v3.0'
            });
        };

        // funkcija za registraciju preko Facebooka uz koju je potrebno dodatno instalirati i facebook nuget
        (function (d, s, id) {
            var js, fjs = d.getElementsByTagName(s)[0];
            if (d.getElementById(id)) { return; }
            js = d.createElement(s); js.id = id;
            js.src = "https://connect.facebook.net/en_US/sdk.js";
            fjs.parentNode.insertBefore(js, fjs);
        }(document, 'script', 'facebook-jssdk'));


        //Google get profile information
        function onSignIn(googleUser) {
            var profile = googleUser.getBasicProfile();
            console.log('ID: ' + profile.getId()); // Do not send to your backend! Use an ID token instead.
            console.log('Name: ' + profile.getName());
            console.log('Image URL: ' + profile.getImageUrl());
            console.log('Email: ' + profile.getEmail()); // This is null if the 'email' scope is not present.
        }

        //funkcija za uspjesnu prijavu preko Google-a
        function onSuccess(googleUser) {
            console.log('Logged in as: ' + googleUser.getBasicProfile().getName());
        }
        //funkcija za gresku prilikom prijave
        function onFailure(error) {
            console.log(error);
        }
        function renderButton() {
            gapi.signin2.render('my-signin2', {
                'scope': 'profile email',
                'width': 240,
                'height': 50,
                'longtitle': true,
                'theme': 'dark',
                'onsuccess': onSuccess,
                'onfailure': onFailure
            });
        }

    </script>
}

@{
    Layout = "~/_SiteLayout.cshtml";
    Page.Title = "Log in";

    // Initialize general page variables
    var email = "";
    var password = "";
    var rememberMe = false;

    var returnUrl = Request.QueryString["ReturnUrl"];
    if (returnUrl.IsEmpty())
    {
        // Preusmjeravanje na Rezervacije nakon uspjesnog Login-a by Aida
        returnUrl = Href("~/Rezervacije");
    }

    // Setup validation
    Validation.RequireField("email", "You must specify an email address.");
    Validation.RequireField("password", "You must specify a password.");
    Validation.Add("password",
        Validator.StringLength(
            maxLength: Int32.MaxValue,
            minLength: 6,
            errorMessage: "Password must be at least 6 characters"));

    // If this is a POST request, validate and process data
    if (IsPost)
    {
        AntiForgery.Validate();
        // is this an external login request?
        string provider = Request.Form["provider"];
        if (!provider.IsEmpty())
        {
            OAuthWebSecurity.RequestAuthentication(provider, Href("~/Account/RegisterService", new { returnUrl }));
            return;
        }
        else if (Validation.IsValid())
        {
            email = Request.Form["email"];
            password = Request.Form["password"];
            rememberMe = Request.Form["rememberMe"].AsBool();

            if (WebSecurity.UserExists(email) && WebSecurity.GetPasswordFailuresSinceLastSuccess(email) > 4 && WebSecurity.GetLastPasswordFailureDate(email).AddSeconds(60) > DateTime.UtcNow)
            {
                Response.Redirect("~/Account/AccountLockedOut");
                return;
            }

            // Pokusaj prijave sa korisnickim podacima
            if (WebSecurity.Login(email, password, rememberMe))
            {
                Context.RedirectLocal(returnUrl);
                return;
            }
            else
            {
                ModelState.AddFormError("Username ili password nisu tačni.");
            }
        }
    }
}
<br /><br /><br /><br /><br /><br />
<div class="content">
    <div class="row">

        <div class="col-sm-12">
            <div align="center">
                <img src="Slike/logomali.png"><br>
            </div><hr>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6">

            <section id="loginForm">

                <form method="post" class="forma2">
                    @AntiForgery.GetHtml()
                    @* Ukoliko je došlo do jedne ili više grešaka uprovjeri, prikaži poruku provjere *@
                    @Html.ValidationSummary("Prijava nije uspjela. Pokušajte ponovo.", excludeFieldErrors: true, htmlAttributes: null)

                    <fieldset>
                        <legend>Prijavite se</legend>
                        <ol>
                            <li class="email">
                                <label for="email" @if (!ModelState.IsValidField("email")) { <text> class="error-label" </text> }>Email adresa</label>
                                <input type="text" id="email" name="email" value="@email" @Validation.For("email") />
                                @* Ispis gresaka prilikom unosa username-a na stranici *@
                                @Html.ValidationMessage("email")
                            </li>
                            <li class="password">
                                <label for="password" @if (!ModelState.IsValidField("password")) { <text> class="error-label" </text> }>Password</label>
                                <input type="password" id="password" name="password" @Validation.For("password") />
                                @* Ispis gresaka prilikom unosa password -a na stranici *@
                                @Html.ValidationMessage("password")
                            </li>
                            <li class="remember-me">
                                <input type="checkbox" id="rememberMe" name="rememberMe" value="true" checked="@rememberMe" />
                                <label class="checkbox" for="rememberMe">Upamti podatke?</label>
                            </li>
                        </ol>
                        <input type="submit" value="Prijavi se" />
                        <p>
                            <a href="~/Account/ForgotPassword">Zaboravili ste password? Kliknite ovdje!</a>
                        </p>
                    </fieldset>
                </form>

            </section>
        </div>
        <div class="col-sm-6">

            <br /><br />
            <section>

                <p class="oNama1">Niste registrovani?</p>
                <p class="oNama1"> <a href="~/Account/Registracija"><b>Registruj te se ovdje!</b></a></p>
                <hr>
            </section>
            <section class="social" id="socialLoginForm">
                @*Facebook Login Button*@
                <div class="fb-login-button" data-max-rows="1" data-size="large" data-button-type="continue_with" data-show-faces="false" data-auto-logout-link="false" data-use-continue-as="false"></div>
                <br />
                <br />
                @*Google Login Button*@
                <div id="my-signin2"></div>



            </section>
        </div>
    </div>
</div>

